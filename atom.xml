<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yoleen的博客</title>
  
  <subtitle>为学日益，为道日损。</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-05-11T04:45:14.334Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Yoleen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>my post</title>
    <link href="http://example.com/2023/05/11/my-post/"/>
    <id>http://example.com/2023/05/11/my-post/</id>
    <published>2023-05-11T04:44:57.000Z</published>
    <updated>2023-05-11T04:45:14.334Z</updated>
    
    <content type="html"><![CDATA[<p>测试</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;测试&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2023/05/10/Hello-World-0/"/>
    <id>http://example.com/2023/05/10/Hello-World-0/</id>
    <published>2023-05-10T03:24:15.000Z</published>
    <updated>2023-05-10T07:27:18.982Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Multi-animal-pose-estimation-with-DeepLabCut-A-5-minute-tutorial"><a href="#Multi-animal-pose-estimation-with-DeepLabCut-A-5-minute-tutorial" class="headerlink" title="Multi-animal pose estimation with DeepLabCut: A 5-minute tutorial"></a>Multi-animal pose estimation with DeepLabCut: A 5-minute tutorial</h1><h2 id="GUI"><a href="#GUI" class="headerlink" title="GUI:"></a>GUI:</h2><p>Full graphical user interface: just follow the tabs in the GUI! <code>python -m deeplabcut</code> launches the GUI.</p><h2 id="Terminal"><a href="#Terminal" class="headerlink" title="Terminal:"></a>Terminal:</h2><p><strong>Import deeplabcut</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> deeplabcut</span><br></pre></td></tr></table></figure><p><strong>(1) Create a project</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">project_name = <span class="string">&quot;cutemice&quot;</span></span><br><span class="line">experimenter = <span class="string">&quot;teamdlc&quot;</span></span><br><span class="line">video_path = <span class="string">&quot;path_to_a_video_file&quot;</span></span><br><span class="line">config_path = deeplabcut.create_new_project(</span><br><span class="line">    project_name,</span><br><span class="line">    experimenter,</span><br><span class="line">    [video_paths],</span><br><span class="line">    multianimal=<span class="literal">True</span>,</span><br><span class="line">    copy_videos=<span class="literal">True</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p><strong><em>NOTE:</em></strong>  Make sure to specify the absolute path to the video file(s).<br>It is quickly obtained on Windows with <kbd>⇧ Shift</kbd>+<kbd>Right click</kbd> and <code>Copy as path</code>,<br>and on Mac with <kbd>⌥ Option</kbd>+<kbd>Right click</kbd> and <code>Copy as Pathname</code>.<br>Ubuntu users only need to copy the file and its path gets added to the clipboard.</p></blockquote><blockquote><p>Next, you can set a variable for the config_path: ‘Full path of the project configuration file*’</p></blockquote><p><strong>(2) Edit the config.ymal file to set up your project</strong></p><blockquote><p><strong><em>NOTE:</em></strong> Here is were you will define your key point names and animal IDs. Also you can change the default # of frames to extract for the next step.</p></blockquote><p><strong>(3) Extract video frames to annotate</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deeplabcut.extract_frames(</span><br><span class="line">    config_path,</span><br><span class="line">    mode=<span class="string">&quot;automatic&quot;</span>,</span><br><span class="line">    algo=<span class="string">&quot;kmeans&quot;</span>,</span><br><span class="line">    userfeedback=<span class="literal">False</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p><strong><em>NOTE:</em></strong> try to extract a few frames from many videos vs. a lot of frames from one video!</p></blockquote><p><strong>(4) Annotate Frames</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deeplabcut.label_frames(config_path)</span><br></pre></td></tr></table></figure><p><strong>(5) Visually check annotated frames</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deeplabcut.check_labels(</span><br><span class="line">    config_path,</span><br><span class="line">    draw_skeleton=<span class="literal">False</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>(6) Create the training dataset</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deeplabcut.create_multianimaltraining_dataset(</span><br><span class="line">    config_path,</span><br><span class="line">    num_shuffles=<span class="number">1</span>,</span><br><span class="line">    net_type=<span class="string">&quot;dlcrnet_ms5&quot;</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>(7) Train the network</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deeplabcut.train_network(</span><br><span class="line">    config_path,</span><br><span class="line">    saveiters=<span class="number">10000</span>,</span><br><span class="line">    maxiters=<span class="number">50000</span>,</span><br><span class="line">    allow_growth=<span class="literal">True</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>(8) Evaluate the network</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deeplabcut.evaluate_network(</span><br><span class="line">    config_path,</span><br><span class="line">    plotting=<span class="literal">True</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>(9) Analyze a video (extracts detections and association costs)</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deeplabcut.analyze_videos(</span><br><span class="line">    config_path,</span><br><span class="line">    [video],</span><br><span class="line">    auto_track=<span class="literal">True</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p><strong><em>NOTE:</em></strong> <code>auto_track=True</code> will complete steps 10-11 for you automatically so you get the “final” H5 file. Use the below steps if you need to change the parameters of tracking based on your dataset.</p></blockquote><p><strong>(10) Spatial and (locally) temporal grouping: Track body part assemblies frame-by-frame</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deeplabcut.convert_detections2tracklets(</span><br><span class="line">    config_path,</span><br><span class="line">    [video],</span><br><span class="line">    track_method=<span class="string">&quot;ellipse&quot;</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>(11) Reconstruct full animal trajectories (tracks from tracklets)</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deeplabcut.stitch_tracklets(</span><br><span class="line">    config_path,</span><br><span class="line">    [video],</span><br><span class="line">    track_method=<span class="string">&quot;ellipse&quot;</span>,</span><br><span class="line">    min_length=<span class="number">5</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>(12) Create a pretty video output</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">deeplabcut.create_labeled_video(</span><br><span class="line">    config_path,</span><br><span class="line">    [video],</span><br><span class="line">    color_by=<span class="string">&quot;individual&quot;</span>,</span><br><span class="line">    keypoints_only=<span class="literal">False</span>,</span><br><span class="line">    trailpoints=<span class="number">10</span>,</span><br><span class="line">    draw_skeleton=<span class="literal">False</span>,</span><br><span class="line">    track_method=<span class="string">&quot;ellipse&quot;</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">deeplabcut</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2023/05/10/hello-world/"/>
    <id>http://example.com/2023/05/10/hello-world/</id>
    <published>2023-05-10T03:18:10.706Z</published>
    <updated>2023-05-10T12:00:02.531Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
    <category term="AI" scheme="http://example.com/tags/AI/"/>
    
  </entry>
  
</feed>
